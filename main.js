/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MyPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var STYLE_EDITOR_PATH = "style.md";
var MyPlugin = class extends import_obsidian.Plugin {
  async onload() {
    const ribbonIconEl = this.addRibbonIcon("command", "Define Custom Math Commands", async (evt) => {
      if (!await this.app.vault.adapter.exists(STYLE_EDITOR_PATH)) {
        await this.app.vault.adapter.append(STYLE_EDITOR_PATH, "```\n% Insert Style Information Here\n\n% ===== PACKAGES ===== %\n\n\n\n% ===== COMMANDS ===== %\n\n\n\n% === ENVIRONMENTS === %\n\n\n\n```");
      }
      this.app.workspace.openLinkText(STYLE_EDITOR_PATH, "", true);
    });
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgcmVhZEZpbGVTeW5jIH0gZnJvbSAnZnMnO1xuaW1wb3J0IHsgUGx1Z2luLCBsb2FkTWF0aEpheCwgRmlsZVN5c3RlbUFkYXB0ZXIgfSBmcm9tICdvYnNpZGlhbic7XG5cbmNvbnN0IFNUWUxFX0VESVRPUl9QQVRIID0gXCJzdHlsZS5tZFwiXG5jb25zdCBTVFlMRV9QQVRIID0gXCJzdHlsZS5zdHlcIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlQbHVnaW4gZXh0ZW5kcyBQbHVnaW4ge1xuXG5cdGFzeW5jIG9ubG9hZCgpIHtcblxuXHRcdC8vIFRoaXMgY3JlYXRlcyBhbiBpY29uIGluIHRoZSBsZWZ0IHJpYmJvbi5cblx0XHRjb25zdCByaWJib25JY29uRWwgPSB0aGlzLmFkZFJpYmJvbkljb24oJ2NvbW1hbmQnLCAnRGVmaW5lIEN1c3RvbSBNYXRoIENvbW1hbmRzJywgYXN5bmMgKGV2dDogTW91c2VFdmVudCkgPT4ge1xuXHRcdFx0Ly8gV2hlbiB0aGUgdXNlciBjbGlja3MgdGhlIGljb24sIGEgZmlsZSBjYWxsZWQgc3R5bGUuc3R5IGlzIGNyZWF0ZWQgYXQgdGhlIHJvb3Qgb2YgdGhlIHZhdWx0LlxuXHRcdFx0Ly8gVGhlIGZpbGUgaXMgY3JlYXRlZCBpZiBpdCBkb2VzIG5vdCBleGlzdCwgYW5kIG9wZW5lZCBpZiBpdCBkb2VzLlxuXHRcdFx0aWYgKCEgYXdhaXQgdGhpcy5hcHAudmF1bHQuYWRhcHRlci5leGlzdHMoU1RZTEVfRURJVE9SX1BBVEgpKSB7XG5cdFx0XHRcdC8vIHdyaXRlIHN0eWxpbmdfdGVtcGxhdGUudHh0IHRvIHN0eWxlLm1kXG5cdFx0XHRcdGF3YWl0IHRoaXMuYXBwLnZhdWx0LmFkYXB0ZXIuYXBwZW5kKFNUWUxFX0VESVRPUl9QQVRILCBcImBgYFxcbiUgSW5zZXJ0IFN0eWxlIEluZm9ybWF0aW9uIEhlcmVcXG5cXG4lID09PT09IFBBQ0tBR0VTID09PT09ICVcXG5cXG5cXG5cXG4lID09PT09IENPTU1BTkRTID09PT09ICVcXG5cXG5cXG5cXG4lID09PSBFTlZJUk9OTUVOVFMgPT09ICVcXG5cXG5cXG5cXG5gYGBcIik7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLmFwcC53b3Jrc3BhY2Uub3BlbkxpbmtUZXh0KFNUWUxFX0VESVRPUl9QQVRILCBcIlwiLCB0cnVlKTtcblx0XHR9KTtcblx0fVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBLHNCQUF1RDtBQUV2RCxJQUFNLG9CQUFvQjtBQUUxQixJQUFxQixXQUFyQixjQUFzQyx1QkFBTztBQUFBLEVBRTVDLE1BQU0sU0FBUztBQUdkLFVBQU0sZUFBZSxLQUFLLGNBQWMsV0FBVywrQkFBK0IsT0FBTyxRQUFvQjtBQUc1RyxVQUFJLENBQUUsTUFBTSxLQUFLLElBQUksTUFBTSxRQUFRLE9BQU8saUJBQWlCLEdBQUc7QUFFN0QsY0FBTSxLQUFLLElBQUksTUFBTSxRQUFRLE9BQU8sbUJBQW1CLDZJQUE2STtBQUFBLE1BQ3JNO0FBQ0EsV0FBSyxJQUFJLFVBQVUsYUFBYSxtQkFBbUIsSUFBSSxJQUFJO0FBQUEsSUFDNUQsQ0FBQztBQUFBLEVBQ0Y7QUFDRDsiLAogICJuYW1lcyI6IFtdCn0K
